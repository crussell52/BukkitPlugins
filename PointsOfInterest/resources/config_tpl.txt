#####
#
# DO NOT MODIFY!
#
# This is used by the system to determine the current configuration
# version.  Changing this value may put the plugin into "lock down"
# unnecessarily.
#
#####
#{configId}#

# This file contains all the information you need to accurately set up
# the PointsOfInterest plugin.
#
# All configuration keys have a default value, and if you ever want to return
# to the default value, you can manually set it or just remove the key entirely
# from your config file.  The next time you start the server or reload the config,
# the default value will be used and the config file will be updated to reflect it.
#
# Finally, all configuration keys must be typed exactly as you see here.  They are
# case sensitive.  Also, do not use tabs in the config file; only use spaces.  If
# you use tabs, the configuration will fail to load and the plugin will be sad.
#
# If there is any error reading the config file during startup, the plugin will be
# disabled to protect your POI data.
#
# The remainder of this file contains the configuration details in the following format:
#
#    #####
#    #   Some information about what this controls.
#    #
#    #####
#    configKey: currentValue


#####
# If set to true, then all POI-related game actions will
# be blocked from execution, except for the ability
# to reload the config from this file and the in-game help.
#
# By default, this will be set to true to give you a chance to
# set your options before players can use the plugin. Once you are
# comfortable with your configuration, you can set this value to false
# and reload your config through the plugin command or by restarting
# your server.
#
# The lock down does not apply to any commands run from the console.
# It is also possible to allow a user to operate normally during a lock down
# through related permission(s).
#
# Future releases MAY force this value back to true if it introduces
# a new "high risk" configuration option.  If this happens, it will
# be noted in the change log.
#
# The default value is true.
#
#####
#{lockDown}#


#####
#   Controls the maximum area search radius.
#
#   Any negative number indicates "no maximium".
#
#   The default value is 2000.
#
#####
#{distanceThreshold}#


#####
#   Controls the minimum distance between POIs.  A player will not be able to create
#   a POI within this distance of another POI.
#
#   The value should never be negative.
#
#   The default value is 50.
#
#####
#{minPoiGap}#


#####
#    Maximum number of results that will be returned when player
#    searches for nearby POIs.
#
#    The value should never be negative.
#
#    The default value is 10
#
#####
#{maxSearchResults}#

#####
#
#    Maximum number of POIs, per world players are allowed to have.
#
#    crussell52.poi.max (see below) can be used to override this value
#    for one or more players.
#
#    A negative value indicates "no maximum" (not recommended).
#
#    The default value is 10.
#
#####
#{maxPlayerPoiPerWorld}#

#####
#    Create dynamic permissions which control the maximum number of POIs per world.
#
#    Each label under this configuration represents a custom permission.
#    Any value can be used, and any number of them can be created.  To apply a
#    custom maximum to a player, simply assign the fully qualified permission
#    to that player, like any other permission (example: crussell52.poi.max.elder).
#
#    Any player who has the poi.action.add permission without a custom max
#    permission will be limited by the value listed under the "default" label.
#    If no default is specified, then a value of 10 is used for the maximum.
#
#    All maximums are applied per world (so, a value of 10 would allow
#    player(s) to set up to 10 POIs in each world).
#
#    Setting a negative indicates "no maximum".
#
#    For example...
#
#    crussell52.poi.max:
#      commoner: 30
#      elder: 50
#      chief: -1
#####
#{crussell52.poi.max}#

#####
#    A list of worlds which do not allow POIs. If a world with existing POIs is added
#    to the black list, those POIs will NOT be automatically deleted; however, players
#    (including POI owners) will not be able to see nor interact with the POIs within
#    that world.  If the world is removed from the blacklist, the POIs will become
#    available to the players again.
#
#    World names are NOT case sensitive and should follow the follow format...
#
#   worldBlacklist:
#   - world1
#   - world2_nether
#   - world2
#####
#{worldBlacklist}#

#####
#   This option defines what a list of POI types that are available.
#
#   A special permission is created for every POI type listed here based on its ID. So if you add a
#   POI type with the id "school", then the permission will be "crussell52.poi.type.school". The
#   default value of the permission is configurable per type.
#
#   Each POI type is configured with the following 4 properties:
#
#     id: string, max 12, no spaces, required
#       When creating a POI, the type is identified by writing this ID on the 4th line of the sign.
#       Each id must be unique. If two types use the same id, then the last one in the list will
#       replace the earlier one(s).
#
#       Use the special id, "default" to identify the default POI type. This is the type which will
#       be applied if the 4th line of the sign is left blank.  The default can appear anywhere in
#       the list, but it is recommended that you place it as the first item in the list.
#
#     label: string, required
#       This is the display name of the POI type. The format of this value will be preserved and
#       will be used when displaying the POI type to players.
#
#     defaultPerm: true/false, optional, default - true
#       If this is true, then all players will have be able to create POIs of this type unless they
#       are explicitly denied access through related permission. If it is false, then only players
#       which are granted the permission will be able to create POIs of this type.
#
#     mapMarkerIcon: string, optional, default - null
#       This value only applies if dynmap, map marker support is enabled (see other config options
#       below). This is the name of the dynmap marker icon to use for POIs of this type. If no value
#       is given, then the icon set by the "defaultMapIcon" config option will be used.  The list of
#       default, available dynmap icons is available here:
#         https://github.com/webbukkit/dynmap/wiki/Using-markers#marker-icons
#
#     Example configuration...
#
#     poiTypes:
#     - id: "default"
#       label: "POI"
#     - id: "mobTrap"
#       label: "Mob Trap"
#       defaultPerm: false
#       mapMarkerIcon: gear
#     - id: "home"
#       label: "Residence"
#       defaultPerm: true
#       mapMarkerIcon: house
#
#####
#{poiTypes}#


#---------------------
#   Dynmap integration options
#
#   These options are related to dynmap integration. In order for Dynmap integration to work, your
#   server must be running at version 1.8+ of Dynmap and your Dynmap configuration must allow
#   for map markers (it does by default).
#-----------------------

#####
#    A list of worlds which allow display of POI markers through dynmap.
#
#    World names are NOT case sensitive and should follow the following format...
#
#    mapMarkerWorlds:
#    - world1
#    - world2_nether
#    - world2
#####
#{mapMarkerWorlds}#

#####
#   The default map marker icon to use. This icon will be used for any POI type which does not
#   have the "mapMarkerIcon" configured.
#
#   For example...
#
#   defaultMapMarkerIcon: star
#####
#{defaultMapMarkerIcon}#
